<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>{% block title %}Welcome!{% endblock %}</title>
    {% block head %}{% endblock %}

    {% block stylesheets %}
        <link rel="stylesheet" href="/components/normalize-css/normalize.css" />

        {% stylesheets
            '@NightDisplayBundle/Resources/public/less/main.less'
            filter="cssrewrite"
        %}
            <link rel="stylesheet" href="{{ asset_url }}"/>
        {% endstylesheets %}
    {% endblock %}

    <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />

    {% block javascriptLibs %}
        <script type="text/javascript" src="/components/jquery/dist/jquery.min.js"></script>
        <script type="text/javascript" src="/components/Snap.svg/dist/snap.svg-min.js"></script>
        <script type="text/javascript" src="/components/jquery-waypoints/waypoints.min.js"></script>

        {% javascripts
            '@NightDisplayBundle/Resources/public/js/lib/classie.js'
            '@NightDisplayBundle/Resources/public/js/lib/modernizr.custom.js'
            '@NightDisplayBundle/Resources/public/js/lib/svgLoader.js'
            '@NightDisplayBundle/Resources/public/js/lib/sideBarEffect.js'
            '@NightDisplayBundle/Resources/public/js/lib/thumbsGrid.js'
            '@NightDisplayBundle/Resources/public/js/lib/svgHoverEffect.js'
            '@NightDisplayBundle/Resources/public/js/lib/svgPathDraw.js'
            '@NightDisplayBundle/Resources/public/js/lib/fullWindowPanel.js'
        %}
            <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}
    {% endblock %}
</head>
<body>

    {#
    # ----- ============= Loading widget
    #}
    {% include 'NightDisplayBundle:Main:loading.html.twig' %}

    {% set activePage = (activePage is defined) ? activePage : 'main' %}
    <div class="st-container">

        {% block body %}

            {# ----- Header ------ #}
            <header class="st-menu st-effect-11">
                {{ render_esi(controller('NightDisplayBundle:Layout:header')) }}
            </header>

            <div id="tools-link">
                <button id="menu-door" class="st-trigger-effects st-trigger-open" href="#" data-effect="st-effect-11">
                    <img src="{{ asset('bundles/nightdisplay/images/icons/menu9.svg') }}" alt=""/>
                </button>
            </div>

            {# ----- Main Page ------ #}
            <div id="page-main" class="st-pusher {% if activePage == 'annex' %} hide{% endif %}">
                <div class="st-content">
                    {% block content %}
                    {% endblock %}
                </div>
            </div>

            {# ----- Annex Page ------ #}
            <div id="page-annex" class="st-pusher{% if activePage == 'main' %} hide{% endif %}">
                <div class="st-content">
                {% block content_annex %}
                {% endblock %}
                </div>
            </div>

            {# ----- Footer ------ #}
            <footer>
            </footer>
        {% endblock %}
    </div>



    {% block javascripts %}
        {% javascripts
            '@NightDisplayBundle/Resources/public/js/waypoints-events.js'
        %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}

        <script>
            $(document).ready(function() {

                function PageLoaded()
                {
                    this.loader = new SVGLoader( document.getElementById( 'loading-overlay' ), { speedIn : 400, easingIn : mina.easeinout } );
                    this.loaderItems = [].slice.call(document.querySelectorAll('#loading-overlay .loader'));
                }

                PageLoaded.prototype.hide = function () {
                    this.loaderItems.forEach(function(el) { classie.addClass(el, 'hide')});
                    this.loader.hide();
                }

                PageLoaded.prototype.show = function () {
                    this.loaderItems.forEach(function(el) { classie.removeClass(el, 'hide')});
                    this.loader.show();
                }

                var pageLoader = new PageLoaded();
                window.pageLoader = pageLoader;

                setTimeout(function() {pageLoader.hide();}, 1000);


                //
                // ============ Skill bar
                // ________________________________________________________________

                $('.skillbar').each(function() {
                    var $barItems = $(this).find('.skillbar-bar, .skill-bar-percent');
                    $barItems.width($(this).data('percent'));
                });


                //
                // ============ AJAX Page load
                // ________________________________________________________________

                //  App Definition
                // ____________
                function App(initialPageType, loader)
                {
                    this.initialPageType = initialPageType;
                    this.minTimeAnimation = 1000;
                    // Kind of page cache
                    this.pagesLoaded = {'main': '', 'annex': ''};
                    // Expected : object with show and hide methods.
                    this.loader = loader;
                    this._initEvents();
                }

                App.prototype.loadPage = function(pageType, url)
                {
                    var self = this;
                    this.loader.show();
                    if (this.pagesLoaded[pageType] == url) {
                        setTimeout(function() {
                            self.showPage(pageType);
                            self.loader.hide();
                        }, self.minTimeAnimation)
                        return;
                    }

                    var startTime = Date.now();
                    $.get(url, {})
                            .done(function (data) {
                                var pageToShow = (pageType == 'annex') ? '#page-annex' : '#page-main';
                                self.showPage(pageType);

                                $(pageToShow + ' .st-content').html(data);
                                self.pagesLoaded[pageType] = document.location.pathname;
                            })
                            .fail(function () {
                                console.log('fail');
                            })
                            .always(function () {
                                var delay = Date.now() - startTime + self.minTimeAnimation;
                                delay = delay > 0 ? delay : 0;
                                setTimeout(function() { self.loader.hide();}, delay)
                            })
                }

                App.prototype.showPage = function(pageType) {
                    var pageToHide = (pageType == 'annex') ? '#page-main:not(".hide")' : '#page-annex:not(".hide")';
                    var pageToShow = (pageType == 'annex') ? '#page-annex' : '#page-main';

                    $(pageToHide).addClass('hide');
                    $(pageToShow).removeClass('hide');
                }

                App.prototype.setPagesLoaded = function(pageType, url) {
                    this.pagesLoaded[pageType] = url;
                }

                App.prototype._initEvents = function() {
                    this._initClickEvent();
                    this._initPopstateEvent();
                }

                App.prototype._initClickEvent = function() {
                    var self = this;
                    $('body').on('click', '.ajax', function(event) {
                        event.preventDefault();
                        var url = $(this).attr('href');
                        var pageType = $(this).data('page') ? $(this).data('page') : 'annex';
                        history.pushState({pageType: pageType}, url, url);
                        self.loadPage(pageType, url);
                    });
                }

                App.prototype._initPopstateEvent = function() {
                    var self = this;
                    window.onpopstate = function (event){
                        var pageType = event.state ? event.state.pageType : self.initialPageType;
                        self.loadPage(pageType, document.location.pathname);
                    }
                }

                //  App instance
                // ____________
                var pageType = "{{ pageType|default('annex')}}";
                var app = new App(pageType, pageLoader);

                app.setPagesLoaded(pageType, '{{ app.request.requestUri }}');
                window.app = app;


                var wp = new FullWindowPanel({itemsSelector: ['#home', '#contact']}, true);
            });
        </script>
    {% endblock %}
</body>
</html>